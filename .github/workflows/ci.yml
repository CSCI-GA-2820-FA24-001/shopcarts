name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11-slim

    services:
      postgres:
        image: postgres:15-alpine
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          #POSTGRES_DB: postgres  #'postgres' created by default if not specified

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry install
      - name: Linting
        run: |
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          pylint service tests --max-line-length=127 --fail-under=9
          echo "Linting completed"

      - name: Run unit tests with PyTest
        run: pytest --pspec --cov=service --cov-fail-under=95 --disable-warnings
        env:
          DATABASE_URI: "postgresql+psycopg://postgres:postgres@postgres:5432/postgres"
                         
      # Uncomment to upload coverage to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
           token: ${{ secrets.CODECOV_TOKEN }}

